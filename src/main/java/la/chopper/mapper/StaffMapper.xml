<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="la.chopper.mapper.StaffMapper">
    <resultMap id="BaseResultMap" type="la.chopper.domain.Staff">
        <id column="staff_id" property="staffId" jdbcType="BIGINT"/>
        <result column="staff_name" property="staffName" jdbcType="VARCHAR"/>
        <result column="staff_password" property="staffPassword" jdbcType="VARCHAR"/>
        <result column="staff_restaurant" property="staffRestaurant" jdbcType="BIGINT"/>
        <result column="staff_authority" property="staffAuthority" jdbcType="BIT"/>
    </resultMap>
    <sql id="Base_Column_List">
        staff_id, staff_name, staff_password, staff_restaurant, staff_authority
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from staff
        where staff_id = #{staffId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM staff
        WHERE staff_id = #{staffId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="la.chopper.domain.Staff">
        INSERT INTO staff (staff_id, staff_name, staff_password,
                           staff_restaurant, staff_authority)
        VALUES (#{staffId,jdbcType=BIGINT}, #{staffName,jdbcType=VARCHAR}, #{staffPassword,jdbcType=VARCHAR},
                #{staffRestaurant,jdbcType=BIGINT}, #{staffAuthority,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="la.chopper.domain.Staff">
        insert into staff
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="staffId != null">
                staff_id,
            </if>
            <if test="staffName != null">
                staff_name,
            </if>
            <if test="staffPassword != null">
                staff_password,
            </if>
            <if test="staffRestaurant != null">
                staff_restaurant,
            </if>
            <if test="staffAuthority != null">
                staff_authority,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="staffId != null">
                #{staffId,jdbcType=BIGINT},
            </if>
            <if test="staffName != null">
                #{staffName,jdbcType=VARCHAR},
            </if>
            <if test="staffPassword != null">
                #{staffPassword,jdbcType=VARCHAR},
            </if>
            <if test="staffRestaurant != null">
                #{staffRestaurant,jdbcType=BIGINT},
            </if>
            <if test="staffAuthority != null">
                #{staffAuthority,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="la.chopper.domain.Staff">
        update staff
        <set>
            <if test="staffName != null">
                staff_name = #{staffName,jdbcType=VARCHAR},
            </if>
            <if test="staffPassword != null">
                staff_password = #{staffPassword,jdbcType=VARCHAR},
            </if>
            <if test="staffRestaurant != null">
                staff_restaurant = #{staffRestaurant,jdbcType=BIGINT},
            </if>
            <if test="staffAuthority != null">
                staff_authority = #{staffAuthority,jdbcType=BIT},
            </if>
        </set>
        where staff_id = #{staffId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="la.chopper.domain.Staff">
        UPDATE staff
        SET staff_name       = #{staffName,jdbcType=VARCHAR},
            staff_password   = #{staffPassword,jdbcType=VARCHAR},
            staff_restaurant = #{staffRestaurant,jdbcType=BIGINT},
            staff_authority  = #{staffAuthority,jdbcType=BIT}
        WHERE staff_id = #{staffId,jdbcType=BIGINT}
    </update>
</mapper>